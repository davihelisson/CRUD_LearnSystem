/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import dao.AlunoDAO;
import modelo.Aluno;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;

/**
 *
 * @author Fatec
 */
public class ConsultarAlunosFrame extends javax.swing.JFrame {

    private JTextField txtCpf, txtNome;
    private JTable tabela;

    public ConsultarAlunosFrame() {
        setTitle("Consultar Alunos");
        setSize(700, 450);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout(10, 10));

        /* ---------- PAINEL SUPERIOR ---------- */
        JPanel painelSuperior = new JPanel(new BorderLayout(10, 10));
        painelSuperior.setBorder(BorderFactory.createEmptyBorder(10, 10, 0, 10));

        // Painel de campos (esquerda)
        JPanel painelCampos = new JPanel();
        painelCampos.setLayout(new BoxLayout(painelCampos, BoxLayout.Y_AXIS));

        JPanel linhaCpf = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel lblCpf = new JLabel("CPF:");
        lblCpf.setPreferredSize(new Dimension(200, 25)); // <<< define largura fixa
        txtCpf = new JTextField(30);
        linhaCpf.add(lblCpf);
        linhaCpf.add(txtCpf);

        JPanel linhaNome = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel lblNome = new JLabel("Nome:");
        lblNome.setPreferredSize(new Dimension(200, 25)); // <<< define largura fixa
        txtNome = new JTextField(30);
        linhaNome.add(lblNome);
        linhaNome.add(txtNome);

        painelCampos.add(linhaCpf);
        painelCampos.add(linhaNome);

        // Painel de botões (direita)
        JPanel painelBotoes = new JPanel(new GridLayout(3, 1, 10, 10));
        JButton btnPesquisar = new JButton("Pesquisar");
        JButton btnListar = new JButton("Listar Todos");
        JButton btnVoltar = new JButton("Voltar");

        painelBotoes.add(btnPesquisar);
        painelBotoes.add(btnListar);
        painelBotoes.add(btnVoltar);

        // Combina os dois painéis
        painelSuperior.add(painelCampos, BorderLayout.CENTER);
        painelSuperior.add(painelBotoes, BorderLayout.EAST);

        add(painelSuperior, BorderLayout.NORTH);

        /* ---------- TABELA ---------- */
        tabela = new JTable();
        JScrollPane scrollPane = new JScrollPane(tabela);
        add(scrollPane, BorderLayout.CENTER);

        /* ---------- AÇÕES ---------- */
        btnPesquisar.addActionListener(e -> carregarDados(true));
        btnListar.addActionListener(e -> carregarDados(false));
        btnVoltar.addActionListener(e -> {
            this.dispose();
            new GerenciarAlunosFrame().setVisible(true);
        });

        // Carrega todos por padrão
        carregarDados(false);
    }

    /*----------CARREGAR DADOS----------*/
    private void carregarDados(boolean filtrar) {
        String cpf = txtCpf.getText().trim();
        String nome = txtNome.getText().trim();

        AlunoDAO dao = new AlunoDAO();
        List<Aluno> lista;

        if (filtrar && !cpf.isEmpty()) {
            lista = dao.readAlunosPorCpf(cpf);
        } else if (filtrar && !nome.isEmpty()) {
            lista = dao.readAlunosPorNome(nome);
        } else {
            lista = dao.readTodosAlunos();
        }
        atualizarTabela(lista);
    }

    /*---------- ATUALIZAR ----------*/
    private void atualizarTabela(List<Aluno> alunos) {
        String[] colunas = {"CPF", "Nome", "Email", "Data Nasc.", "Ativo"};
        DefaultTableModel modelo = new DefaultTableModel(colunas, 0) {
            @Override
            public boolean isCellEditable(int r, int c) {
                return false;
            }
        };

        alunos.forEach(a -> modelo.addRow(new Object[]{
            a.getCpf(), a.getNome(), a.getEmail(),
            new java.text.SimpleDateFormat("dd/MM/yyyy").format(a.getDataNascimento()),
            a.isAtivo() ? "Sim" : "Não"
        }));
        tabela.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConsultarAlunosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConsultarAlunosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConsultarAlunosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConsultarAlunosFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConsultarAlunosFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
